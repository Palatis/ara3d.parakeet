// DO NOT EDIT: Autogenerated file created on 2024-01-26 1:43:40 AM. 
using System;
using System.Linq;
using Ara3D.Parsing;

namespace Parakeet.Cst.CsvGrammar
{
    /// <summary>
    /// Nodes = (Text|String)
    /// </summary>
    public class CstField : CstChoice
    {
        public static Rule Rule = CstNodeFactory.Grammar.Field;
        public CstField(params CstNode[] children) : base(children) { }
        public CstFilter<CstText> Text => new CstFilter<CstText> (Children);
        public CstFilter<CstString> String => new CstFilter<CstString> (Children);
    }

    /// <summary>
    /// Nodes = (Row)*
    /// </summary>
    public class CstFile : CstNode
    {
        public static Rule Rule = CstNodeFactory.Grammar.File;
        public CstFile(params CstNode[] children) : base(children) { }
        public CstFilter<CstRow> Row => new CstFilter<CstRow> (Children);
    }

    /// <summary>
    /// Nodes = 
    /// </summary>
    public class CstIdentifier : CstLeaf
    {
        public static Rule Rule = CstNodeFactory.Grammar.Identifier;
        public CstIdentifier(string text) : base(text) { }
        // No children
    }

    /// <summary>
    /// Nodes = (Field)*
    /// </summary>
    public class CstRow : CstNode
    {
        public static Rule Rule = CstNodeFactory.Grammar.Row;
        public CstRow(params CstNode[] children) : base(children) { }
        public CstFilter<CstField> Field => new CstFilter<CstField> (Children);
    }

    /// <summary>
    /// Nodes = (Row)*
    /// </summary>
    public class CstFile : CstNode
    {
        public static Rule Rule = CstNodeFactory.Grammar.File;
        public CstFile(params CstNode[] children) : base(children) { }
        public CstFilter<CstRow> Row => new CstFilter<CstRow> (Children);
    }

    /// <summary>
    /// Nodes = 
    /// </summary>
    public class CstString : CstLeaf
    {
        public static Rule Rule = CstNodeFactory.Grammar.String;
        public CstString(string text) : base(text) { }
        // No children
    }

    /// <summary>
    /// Nodes = 
    /// </summary>
    public class CstText : CstLeaf
    {
        public static Rule Rule = CstNodeFactory.Grammar.Text;
        public CstText(string text) : base(text) { }
        // No children
    }

}
