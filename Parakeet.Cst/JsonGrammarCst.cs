// DO NOT EDIT: Autogenerated file created on 2024-03-19 10:22:21 PM. 
using System;
using System.Linq;

namespace Ara3D.Parakeet.Cst.JsonGrammarNameSpace
{
    /// <summary>This interface exists to make it easy to auto-generate type switches</summary>
    public interface IJsonCstNode { }

    /// <summary>
    /// Rule = Array ::= (('['+_RECOVER_+WS+(Elements)?+WS+']')+WS)
    /// Nodes = 
    /// </summary>
    public class CstArray : CstNodeLeaf, IJsonCstNode
    {
        public static Rule Rule = CstNodeFactory.StaticGrammar.Array;
        public CstArray(ILocation location, string text) : base(location, text) { }
    }

    /// <summary>
    /// Rule = Constant ::= ((("false"|"true"|"null")+!(IdentifierChar))+WS)
    /// Nodes = 
    /// </summary>
    public class CstConstant : CstNodeLeaf, IJsonCstNode
    {
        public static Rule Rule = CstNodeFactory.StaticGrammar.Constant;
        public CstConstant(ILocation location, string text) : base(location, text) { }
    }

    /// <summary>
    /// Rule = Identifier ::= ((IdentifierFirstChar+(IdentifierChar)*)+WS)
    /// Nodes = 
    /// </summary>
    public class CstIdentifier : CstNodeLeaf, IJsonCstNode
    {
        public static Rule Rule = CstNodeFactory.StaticGrammar.Identifier;
        public CstIdentifier(ILocation location, string text) : base(location, text) { }
    }

    /// <summary>
    /// Rule = Json ::= ((WS+Value+WS)+WS)
    /// Nodes = 
    /// </summary>
    public class CstJson : CstNodeLeaf, IJsonCstNode
    {
        public static Rule Rule = CstNodeFactory.StaticGrammar.Json;
        public CstJson(ILocation location, string text) : base(location, text) { }
    }

    /// <summary>
    /// Rule = Member ::= ((String+_RECOVER_+WS+':'+WS+Value)+WS)
    /// Nodes = String
    /// </summary>
    public class CstMember : CstNode, IJsonCstNode
    {
        public static Rule Rule = CstNodeFactory.StaticGrammar.Member;
        public CstMember(ILocation location, params CstNode[] children) : base(location, children) { }
        public CstNodeFilter<CstString> String => new CstNodeFilter<CstString> (Children);
    }

    /// <summary>
    /// Rule = Number ::= ((Integer+(Fraction)?+(Exponent)?)+WS)
    /// Nodes = 
    /// </summary>
    public class CstNumber : CstNodeLeaf, IJsonCstNode
    {
        public static Rule Rule = CstNodeFactory.StaticGrammar.Number;
        public CstNumber(ILocation location, string text) : base(location, text) { }
    }

    /// <summary>
    /// Rule = Object ::= (('{'+_RECOVER_+WS+(Members)?+'}')+WS)
    /// Nodes = (Member)*
    /// </summary>
    public class CstObject : CstNode, IJsonCstNode
    {
        public static Rule Rule = CstNodeFactory.StaticGrammar.Object;
        public CstObject(ILocation location, params CstNode[] children) : base(location, children) { }
        public CstNodeFilter<CstMember> Member => new CstNodeFilter<CstMember> (Children);
    }

    /// <summary>
    /// Rule = String ::= (('"'+_RECOVER_+(StringChar)*+'"')+WS)
    /// Nodes = 
    /// </summary>
    public class CstString : CstNodeLeaf, IJsonCstNode
    {
        public static Rule Rule = CstNodeFactory.StaticGrammar.String;
        public CstString(ILocation location, string text) : base(location, text) { }
    }

}
